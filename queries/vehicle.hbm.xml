<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC
"-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping>
  <sql-query name="app.vehicle.get.all">
    <![CDATA[
      SELECT
        "ID" AS "vehicleId",
        "TYPE" AS "vehicleType",
        "NAME" AS "vehicleName"
      FROM "M_VEHICLE_TYPE"
      WHERE
        "DEL_FLG" = 0
      ORDER BY
        "DISP_ORD"
    ]]>
  </sql-query>
  <sql-query name="app.vehicle.get.allcatwise">
      <![CDATA[
      SELECT
        vtype."ID" AS "vehicleId",
        vtype."TYPE" AS "vehicleType",
        vtype."NAME" AS "vehicleName",
        vtype."CATEGORY" AS "CATEGORY_ID",
        cat."NAME" AS "CATEGORY_NAME"
      FROM
        "M_VEHICLE_TYPE" AS vtype
        JOIN "M_VEHICLE_CAT" AS cat
        ON(
          vtype."CATEGORY" = cat."ID"
        )
      WHERE
        cat."DEL_FLG" = 0
        AND vtype."DEL_FLG" = 0
      ORDER BY
        "DISP_ORD"
      ]]>
  </sql-query>
  <sql-query name="app.vehicle.save">
      <![CDATA[
        INSERT INTO "T_USER_VEHICLE"
        (
          "ID",
          "VEHICLE_ID",
          "VEHICLE_NO",
          "USER_ID",
          "DEL_FLG",
          "INS_DT",
          "INS_BY",
          "NAME"
        )
         VALUES(
           :id,
           :vehicleId,
           :vehicleNo,
           :userId,
           0,
           CURRENT_TIMESTAMP,
           :serviceCode,
           :vehicleName
         )
      ]]>
  </sql-query>
  <sql-query name="app.vehicle.get.uservehicle">
    <![CDATA[
        select
          uservehicle."ID" AS "userVehicleId",
          uservehicle."VEHICLE_ID" AS "vehicleId",
          uservehicle."VEHICLE_NO" AS "vehicleNo",
          uservehicle."NAME" AS "vehicleName",
          vehicletype."TYPE" AS "vehicleType",
          vehicletype."NAME" AS "vehicleTypeName"
          from "T_USER_VEHICLE" as uservehicle
        JOIN "M_VEHICLE_TYPE" as vehicletype
        ON (
          uservehicle."VEHICLE_ID" = vehicletype."ID"
        )
        where
          uservehicle."DEL_FLG" = 0
          AND vehicletype."DEL_FLG" = 0
          AND uservehicle."USER_ID" = :userId
    ]]>
  </sql-query>
  <sql-query name="app.vehicle.get.uservehicleImages">
    <![CDATA[
        select
            img."ID" AS "imageId",
            img."USER_VEHICLE_ID" AS "vehicleId",
            "img"."IMG_NO" AS "imgNo",
            "img"."IMG_URL" AS "imgUrl"
          from "T_USER_VEHICLE_IMG" as img
          JOIN "T_USER_VEHICLE" as vehicle
          ON (
            img."USER_VEHICLE_ID" = vehicle."ID"
          )
          where
            img."DEL_FLG" = 0
            AND vehicle."DEL_FLG" = 0
            AND vehicle."USER_ID" = :userId
    ]]>
  </sql-query>
  <sql-query name="app.vehicle.get.uservehiclelatestone">
    <![CDATA[
        select
          uservehicle."ID" AS "userVehicleId",
          uservehicle."VEHICLE_ID" AS "vehicleId",
          uservehicle."VEHICLE_NO" AS "vehicleNo",
          uservehicle."NAME" AS "vehicleName"
        from "T_USER_VEHICLE" as uservehicle
        where
          uservehicle."DEL_FLG" = 0
          AND uservehicle."USER_ID" = :userId
          AND uservehicle."VEHICLE_NO" = :vehicleNo
        ORDER BY "INS_DT" desc
        LIMIT 1
    ]]>
  </sql-query>
  <sql-query name="app.vehicle.delete.uservehicle">
      <![CDATA[
        UPDATE "T_USER_VEHICLE"
        SET
          "DEL_FLG" = 1,
          "UPD_DT" = CURRENT_TIMESTAMP,
          "UPD_BY" = :serviceCode
        WHERE
         "ID" = :userVehicleId
      ]]>
  </sql-query>
  <sql-query name="app.vehicle.update.uservehicle">
      <![CDATA[
        UPDATE "T_USER_VEHICLE"
        SET
          "VEHICLE_ID" = :vehicleId,
          "VEHICLE_NO" = :vehicleNo,
          "NAME" = :vehicleName,
          "UPD_DT" = CURRENT_TIMESTAMP,
          "UPD_BY" = :serviceCode
        WHERE
         "ID" = :userVehicleId
      ]]>
  </sql-query>
  <sql-query name="app.vehicle.save.uservehicleimage">
    <![CDATA[
      INSERT INTO
        "T_USER_VEHICLE_IMG"
        (
          "ID",
          "USER_VEHICLE_ID",
          "USER_ID",
          "IMG_URL",
          "DEL_FLG",
          "INS_DT",
          "INS_BY",
          "IMG_NO"
        )
        VALUES(
          :id,
          :vehicleID,
          :userId,
          :imgPath,
          0,
          CURRENT_TIMESTAMP,
          :serviceCode,
          :imgNo
        )
      ON CONFLICT ("USER_VEHICLE_ID","USER_ID","IMG_NO","DEL_FLG")
      DO
        UPDATE SET "IMG_URL" = :imgPath
    ]]>
  </sql-query>
  <sql-query name="app.vehicle.get.uservehicleimage">
    <![CDATA[
    SELECT
    "img"."IMG_URL" AS "url",
    "img"."USER_VEHICLE_ID" AS "vehicleID",
    postReq."ID" AS "requestID"
  FROM
    "T_POST_REQUEST" AS postReq
    JOIN "M_USER" AS mUser
    ON (
      mUser."USER_ID" = postReq."REQUEST_USER_ID"
    AND mUser."DEL_FLG" = 0
    )
    JOIN
    "T_USER_VEHICLE_IMG" AS "img"
    ON(
      mUser."USER_ID" = "img"."USER_ID"
      AND "img"."DEL_FLG" = 0
    )
  JOIN
    "T_USER_VEHICLE" AS "vehicle"
  ON(
    "img"."USER_VEHICLE_ID" = "vehicle"."ID"
    AND "vehicle"."DEL_FLG" = 0
  )
  WHERE
    postReq."POST_ID" = :postId
    AND postReq."DEL_FLG" = 0
    AND mUser."DEL_FLG" = 0
  ]]>
</sql-query>

</hibernate-mapping>
